apply plugin: 'com.android.application'
apply plugin: 'com.alibaba.arouter'
// 依赖插件脚本
apply from: 'tinker-support.gradle'
//美团多渠道打包
apply plugin: 'walle'
android {
    signingConfigs {
        release {
            storeFile file('/Users/zhenghuachao/keyStory/tempAppKeyStore.jks')
            keyAlias 'templateApp'
            keyPassword 'zhc123'
            storePassword 'zhc123'
        }
    }
    compileSdkVersion var.compileSdkVersion
    defaultConfig {
        applicationId "com.template.app"
        minSdkVersion var.minSdkVersion
        targetSdkVersion var.targetSdkVersion
        versionCode var.versionCode
        versionName var.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        //multiDexKeepProguard file("tinkerMultidexKeep.pro") //keep specific classes using proguard syntax
        manifestPlaceholders = [
                JPUSH_PKGNAME      : applicationId,
                JPUSH_APPKEY       : "25c120b5fe70af0b7d10cb17", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL      : "developer-default", //暂时填写默认值即可.
                //友盟统计渠道
                UMENG_CHANNEL_VALUE: "default_channel"

        ]

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
                includeCompileClasspath = true
            }
        }


        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    //防止编译的时候oom、GC
    dexOptions {
        javaMaxHeapSize "4g"
    }
//    -------------使用walle打包 不在使用productFlavors方式 ------------------------------------
//    flavorDimensions "default"//这个名字貌似随便取，也可以有多个，总之一定要有
//    //多渠道打包
//    productFlavors {
//        kuan {}     //酷安
//        tencent {}  //应用宝
//        baidu {}    //百度
//        xiaomi {}   //小米
//        huawei {}   //华为
//        google {}   //谷歌
//
//        productFlavors.all { flavor ->
//            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
//        }
//    }
//    //升级到3.0之后 打包代码变更如下
//    android.applicationVariants.all {
//        variant ->
//            variant.outputs.all {
//                outputFileName = "template_${variant.productFlavors[0].name}_v${variant.versionName}.apk"
//            }
//    }
    sourceSets { main { jni.srcDirs = ['src/main/jni', 'src/main/jni/'] } }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api project(':baselibrary')
    implementation "com.android.support:appcompat-v7:$rootProject.var.supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.var.butterknifeVersion"
    annotationProcessor('com.alibaba:arouter-compiler:1.1.4') {
        exclude group: 'com.android.support'
    }

    //美团多渠道打包
    implementation 'com.meituan.android.walle:library:1.1.6'

    //注释掉原有bugly的仓库
    //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.3.4
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.6'
    implementation 'com.tencent.bugly:nativecrashreport:2.2.0' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0


}
//生成渠道包 ./gradlew clean assembleReleaseChannels
walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}